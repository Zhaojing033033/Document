1.RDD 与 普通的集合有哪些区别

RDD里面计入的是描述信息（从哪里读数据、以后对数据如何进行计算）、RDD的方法分为两类Transformation（lazy）、Action（生成Task，并发送到Executor中执行）
Scala存储的是真正要计算的数据、执行方法后立即回返回结果

RDD的特点：
1.一系列分区（一个RDD里面有多个分区，分区是有编号的）
2.每一个输入切片会有一个函数作用在上面
3.RDD和RDD之间存储依赖关系（是父RDD调用什么方法，传入哪些函数得到的）
4.（可选）RDD中如果存储的是KV，shuffle是会有一个分区器，模式hash partitioner
5.（可选）如果是读取HDFS中的数据，那么会有一个最优位置

一个分区对应一个Task（在同一个Stage），一个分区对应的Task只能在一台机器里面（在Executor），一台机器上可以有多个分区对应的Task


分组TopN
	1.聚合后按学科进行分组，然后在每个分组中进行排序（调用的是Scala集合的排序）
	2.先按学科进行过滤，然后调用RDD的方法进行排序（多台机器+内存+磁盘），需要将任务提交多次
	3.自定义分区，然后在每个分区中进行排序（patitionBy、mapPartitions）
	4.在聚合是就用于自定义的分区，可以减少shuffle
	5.自定义分区，mapPartitions，在调用mapPartitions方法里面定义一个可排序的集合（6）


WordCount的执行流程
	6个RDD
	2个Stage


-----------------------------------------------------------------------------

什么是后进行cache
	1.要求的计算速度快
	2.集群的资源要足够大
	3.重要：cache的数据会多次的触发Action
	4.先进行过滤，然后将缩小范围的数据在cache到内存

	//第一个参数，放到磁盘
	//第二个参数，放到内存
	//第三个参数，磁盘中的数据，不是以java对象的方式保存
	//第四个参数，内存中的数据，以java对象的方式保存
	val MEMORY_AND_DISK = new StorageLevel(true, true, false, true)

	OFF_HEAP:堆外内存 （Tachyon，分布式内存存储系统）
	Alluxio - Open Source Memory Speed Virtual Distributed Storage

-----------------------------------------------------------------------------

什么时候做checkpoint
	1.迭代计算，要求保证数据安全
	2.对速度要求不高（跟cache到内存进行对比）
	3.将中间结果保存到hdfs

	//设置checkpoint目录（分布式文件系统的目录hdfs目录）
	//经过复杂进行，得到中间结果
	//将中间结果checkpoint到指定的hdfs目录
	//后续的计算，就可以使用前面ck的数据了
	


